1Q:Suppose you’re a web developer in a company and need to decide if you’ll use vanilla (plain) Python for a project, or a framework like Django instead. What are the advantages and drawbacks of each?
A: Using vanilla Python means writing everything from scratch, which gives you full control and helps you understand how things work under the hood. It’s great for learning and for small, simple projects. The downside is that it can take a lot more time and effort to build things like authentication, databases, or routing—all of which you’d have to set up manually.
Django, on the other hand, is a high-level web framework that comes with a lot of tools already built in. It handles things like user login, databases, and admin panels, which saves time and makes building web apps faster. The trade-off is that it can feel more structured and harder to customize if you don’t understand how it works yet. But for most web projects, especially bigger ones, Django is a great choice because it saves time and follows good coding practices.


2Q: In your own words, what is the most significant advantage of Model View Template (MVT) architecture over Model View Controller (MVC) architecture?
A:The biggest difference between MVT (Model-View-Template) and MVC (Model-View-Controller) is how the “Template” or “View” layer works. In MVT, Django handles a lot of the logic for you, and the template just focuses on displaying data. It separates the back-end code and front-end display in a very clean way. You don’t have to write your own controller—the framework acts as the controller for you. This makes Django’s MVT easier to manage and learn, especially for beginners.


3Q: Personal Goals:
-What do you want to learn about Django? 
      -I want to learn how to build a real web application using Django, from setting up routes to working with databases and templates. I want to understand how everything connects and how to organize my code properly in a Django project.
-What do you want to get out of this Achievement? 
      -I want to get more comfortable using Django’s built-in tools like the admin panel, authentication, and form handling. These seem super helpful and can save time in future projects.
-Where or what do you see yourself working on after you complete this Achievement?
      - After finishing this Achievement, I’d like to work on a personal project using Django—maybe a blog, a recipe app, or something related to tracking data. I’d also like to feel confident enough to mention Django as a skill in a job or internship setting.
