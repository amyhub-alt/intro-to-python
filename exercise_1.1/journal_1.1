Exercise 1.1: Getting Started with Python 
Learning Goals

Summarize the uses and benefits of Python for web development
Prepare your developer environment for programming with Python

Reflection Questions

1. In your own words, what is the difference between frontend and backend web development? If you were hired to work on backend programming for a web application, what kinds of operations would you be working on?

2. Imagine you’re working as a full-stack developer in the near future. Your team is asking for your advice on whether to use JavaScript or Python for a project, and you think Python would be the better choice. How would you explain the similarities and differences between the two languages to your team? Drawing from what you learned in this Exercise, what reasons would you give to convince your team that Python is the better option? 
(Hint: refer to the Exercise section “The Benefits of Developing with Python”)

3. Now that you’ve had an introduction to Python, write down 3 goals you have for yourself and your learning during this Achievement. You can reflect on the following questions if it helps you. What do you want to learn about Python? What do you want to get out of this Achievement? Where or what do you see yourself working on after you complete this Achievement?



Reflection Answers
1. The frontend of a web application is everything the user sees and interacts with—like the layout, design, and buttons. The backend, on the other hand, handles everything behind the scenes, such as servers, databases, and logic that connects to the frontend. If I were hired to work on backend programming, I’d be responsible for setting up and managing databases, building and maintaining APIs, handling server-side logic, and making sure the frontend can communicate properly with the backend systems.

2.Both JavaScript and Python are high-level, dynamically typed languages, and they’re both used in web development. But they have different strengths. JavaScript is mostly known for frontend work, although it can be used on the backend too (with Node.js). Python, on the other hand, was designed to be simple, readable, and easy to work with, which makes it great for fast development.

If I were recommending Python, I’d explain that it’s easier to read and understand, which helps the whole team write cleaner code and debug faster. Python also comes with a lot of built-in tools and packages that make complex tasks like database handling, form validation, or encryption way simpler. Plus, the strong community support and the amount of learning resources available make it a really developer-friendly language. If we want to move quickly, keep code clean, and take advantage of powerful libraries, Python is a great choice.

3. I want to become confident using Python in real-world settings, especially for my new internship in data analytics. I’d like to get comfortable working with data, writing scripts, and using libraries like pandas or NumPy.

I want to understand the core concepts of Python, like functions, loops, and data structures, so I can build a strong foundation and problem-solve more effectively.

By the end of this Achievement, I want to feel ready to apply Python in different areas—whether that’s for data analysis, automation, or backend development—and start building projects that can help me grow in my career.
